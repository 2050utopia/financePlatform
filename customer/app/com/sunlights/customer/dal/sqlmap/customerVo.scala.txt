@(name:String, qmap:Map[String,Object])
@name match {
	case "CustomerDao.getCustomerInfoVoByPhoneNo" =>{
		select  new com.sunlights.customer.vo.CustomerInfoVo(
		            c.mobile,c.realName,c.nickName,c.email,c.identityNumber,
		            case when EXISTS (select 1 from CustomerGesture cg where cg.customerId = c.customerId and cg.status = 'N' and cg.deviceNo = :deviceNo) THEN '1' ELSE '0' END as gestureOpened,
                    case when c.identityTyper = 'I' and c.identityNumber is not null THEN '1' ELSE '0' END as certify,
                    case when a.tradePassword is null THEN '0' ELSE '1' END as tradePwdFlag,
                    (select count(1)||'' from BankCard bc where bc.customerId = c.customerId) as bankCardCount,
                    c.customerId)
        from    Customer c,BaseAccount a
        where   c.customerId = a.custId
        and     c.mobile = :mobilePhoneNo
	}

    case "CustomerDao.getCustomerInfoVoByIdCardNo" =>{
            select  new com.sunlights.customer.vo.CustomerInfoVo(
                        c.mobile,c.realName,c.nickName,c.email,c.identityNumber,
                        '0' as gestureOpened,
                        case when c.identityTyper = 'I' and c.identityNumber is not null THEN '1' ELSE '0' END as certify,
                        case when a.tradePassword is null THEN '0' ELSE '1' END as tradePwdFlag,
                        (select count(1)||'' from BankCard bc where bc.customerId = c.customerId) as bankCardCount,
                        c.customerId)
            from    Customer c,BaseAccount a
            where   c.customerId = a.custId
            and     c.realName = :userName
            and     c.identityTyper = 'I'
            and     c.identityNumber = :idCardNo
    }



}